{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","ALL_OPERATORS","DEFAULT_DEVICE","DEFAULT_GROUP_BY_OP","DEFAULT_SELECT_FIELD","DEFAULT_SELECT_NS","DEFAULT_SELECT_PROJECT","DEFAULT_WHERE","NONE","iobeamDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","project","namespace","device_id","group_by_field","group_by_operator","interval","panelCtrl","limit_by_field","limit_by_count","wheres","newPlusButton","i","length","j","temp","type","newClause","newSegment","value","cssClass","rowIdx","field","del","html","button","push","segment","idx","addWhereRow","splice","refresh","Promise","event","datasource","fieldQuery","then","transformToSegments","results","text","concat","limitByFieldsQuery","projectQuery","namespaceQuery","deviceQuery","operators","resolve","map","v","rawQuery","console","log","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from \"app/plugins/sdk\";\nimport \"./css/query-editor.css!\";\nimport {\n    ALL_OPERATORS,\n    DEFAULT_DEVICE,\n    DEFAULT_GROUP_BY_OP,\n    DEFAULT_SELECT_FIELD,\n    DEFAULT_SELECT_NS,\n    DEFAULT_SELECT_PROJECT,\n    DEFAULT_WHERE,\n    NONE\n} from \"./constants\";\n\nexport class iobeamDatasourceQueryCtrl extends QueryCtrl {\n\n    constructor($scope, $injector, uiSegmentSrv)  {\n        super($scope, $injector);\n\n        this.scope = $scope;\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.target.target = this.target.target || DEFAULT_SELECT_FIELD;\n        this.target.project = this.target.project || DEFAULT_SELECT_PROJECT;\n        this.target.namespace = this.target.namespace || DEFAULT_SELECT_NS;\n        this.target.device_id = this.target.device_id || DEFAULT_DEVICE;\n        this.target.group_by_field = this.target.group_by_field || NONE;\n        this.target.group_by_operator = this.target.group_by_operator || DEFAULT_GROUP_BY_OP;\n        this.target.interval = this.target.interval || this.panelCtrl.interval;\n        this.target.limit_by_field = this.target.limit_by_field || NONE;\n        this.target.limit_by_count = this.target.limit_by_count || 1;\n\n        this.target.wheres = this.target.wheres || [[this.uiSegmentSrv.newPlusButton()]];\n        for (let i = 0; i < this.target.wheres.length; i++) {\n            for (let j = 0; j < this.target.wheres[i].length; j++) {\n                const temp = this.target.wheres[i][j];\n                if (temp.type === \"clause\") {\n                    const newClause = this.uiSegmentSrv.newSegment(temp.value);\n                    newClause.cssClass = temp.cssClass;\n                    newClause.type = temp.type;\n                    this.target.wheres[i][j] = newClause;\n                }\n            }\n        }\n\n    }\n\n    /** Add a new where row to the UI, pushing down the plus button **/\n    addWhereRow(rowIdx) {\n        const field = this.uiSegmentSrv.newSegment(\"\");\n        field.cssClass = \"io-segment io-where-clause\";\n        field.type = \"clause\";\n        const del = this.uiSegmentSrv.newSegment(\"\");\n        del.html = \"<i class=\\\"fa fa-trash\\\"></i>\";\n        del.type = \"delete\";\n        del.cssClass = \"io-segment\";\n        const button = this.uiSegmentSrv.newPlusButton();\n        button.cssClass = \"io-segment-no-left\";\n\n        this.target.wheres[rowIdx] = [field, del];\n        this.target.wheres.push([button]);\n    }\n\n    // Only handles clicks for plus buttons and delete buttons\n    wheresClicked(segment, rowIdx, idx) {\n        // Handle plus button clicks\n        if (segment.type === \"plus-button\") {\n            // Only add a row if the previous one is non-empty clause\n            if (rowIdx === 0 || this.target.wheres[rowIdx - 1][0].value !== \"\") {\n                this.addWhereRow(rowIdx);\n            } else {  // Prevents user from 'editting' the button\n                this.target.wheres[rowIdx][idx] = this.uiSegmentSrv.newPlusButton();\n            }\n        } else if (segment.type === \"delete\") {  // Handle delete clicks\n            this.target.wheres.splice(rowIdx, 1);\n            this.panelCtrl.refresh();\n        }\n        return new Promise(() => {});\n    }\n\n    wheresUpdated(segment, rowIdx, idx) {\n        this.panelCtrl.refresh();\n    }\n\n    // Handles when a clause is actually entered\n    wheresEntered(event, rowIdx, idx) {\n        if (event && event.target) {\n            this.target.wheres[rowIdx][idx].value = event.target.value;\n            this.panelCtrl.refresh();\n        }\n    }\n\n    limitCount(event) {\n        this.target.limit_by_count = event.target.value;\n        this.panelCtrl.refresh();\n    }\n\n    // No options for clicking on interval, just a text field.\n    intervalClicked() {\n        return new Promise(() => {});\n    }\n\n    getOptions() {\n        return this.datasource.fieldQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getGroupByOptions() {\n        return this.datasource.fieldQuery(this.target)\n            .then((results) => {\n                return [{value: NONE, text: NONE}].concat(results);\n            })\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getLimitByOptions() {\n        return this.datasource.limitByFieldsQuery(this.target)\n            .then((results) => {\n                return [{value: NONE, text: NONE}].concat(results);\n            })\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getProjects() {\n        return this.datasource.projectQuery(this.target)\n            .then((results) => {\n                return [{text: NONE, value: NONE}].concat(results);\n            })\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getNamespaces() {\n        return this.datasource.namespaceQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getDevices() {\n        return this.datasource.deviceQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getOperators() {\n        const operators = [NONE].concat(ALL_OPERATORS);\n        return new Promise((resolve) => {\n            resolve(operators.map((v) => {\n                return {text: v, value: v};\n            }));\n        }).then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    toggleEditorMode() {\n        this.target.rawQuery = !this.target.rawQuery;\n    }\n\n    onChangeInternal() {\n        this.refresh(); // Asks the panel to refresh data.\n    }\n\n    onChangeNamespace() {\n        this.refresh();\n    }\n\n    onChangeField() {\n        console.log(this.target);//REMOVE\n        this.refresh();\n    }\n\n    onChangeProject() {\n        // reset namespace value in selector\n        this.datasource.namespaceQuery(this.target)\n            .then(() => {\n                return function(results) {\n                    if (results.length > 0) {\n                        this.target.namespace = results[0].text;\n                    }\n                };\n            });\n        this.refresh();\n    }\n}\n\niobeamDatasourceQueryCtrl.templateUrl = \"partials/query.editor.html\";\n"]}