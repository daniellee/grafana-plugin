{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","ALL_OPERATORS","DEFAULT_DEVICE","DEFAULT_GROUP_BY_OP","DEFAULT_SELECT_FIELD","DEFAULT_SELECT_NS","DEFAULT_SELECT_PROJECT","DEFAULT_WHERE","NONE","iobeamDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","field","project_title","project","namespace","device_id","group_by_field","group_by_operator","interval","panelCtrl","limit_by_field","limit_by_count","wheres","newPlusButton","i","length","j","temp","type","newClause","newSegment","value","cssClass","rowIdx","del","html","button","push","segment","idx","addWhereRow","splice","refresh","Promise","event","datasource","fieldQuery","then","transformToSegments","results","text","concat","limitByFieldsQuery","projectQuery","console","log","namespaceQuery","deviceQuery","operators","resolve","map","v","rawQuery","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,qB,kBAAAA,S;;AAGJC,yB,cAAAA,a;AACAC,0B,cAAAA,c;AACAC,+B,cAAAA,mB;AACAC,gC,cAAAA,oB;AACAC,6B,cAAAA,iB;AACAC,kC,cAAAA,sB;AACAC,yB,cAAAA,a;AACAC,gB,cAAAA,I;;;;;;;;;;;;;;;;;;;;;iDAGSC,yB;;;AAET,mDAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA8C;AAAA;;AAAA,sKACpCF,MADoC,EAC5BC,SAD4B;;AAG1C,0BAAKE,KAAL,GAAaH,MAAb;AACA,0BAAKE,YAAL,GAAoBA,YAApB;AACA,0BAAKE,MAAL,CAAYC,KAAZ,GAAoB,MAAKD,MAAL,CAAYC,KAAZ,IAAqBX,oBAAzC;AACA,0BAAKU,MAAL,CAAYE,aAAZ,GAA4B,MAAKF,MAAL,CAAYG,OAAZ,IAAuBX,sBAAnD;AACA,0BAAKQ,MAAL,CAAYG,OAAZ,GAAsB,MAAKH,MAAL,CAAYG,OAAlC;AACA,0BAAKH,MAAL,CAAYI,SAAZ,GAAwB,MAAKJ,MAAL,CAAYI,SAAZ,IAAyBb,iBAAjD;AACA,0BAAKS,MAAL,CAAYK,SAAZ,GAAwB,MAAKL,MAAL,CAAYK,SAAZ,IAAyBjB,cAAjD;AACA,0BAAKY,MAAL,CAAYM,cAAZ,GAA6B,MAAKN,MAAL,CAAYM,cAAZ,IAA8BZ,IAA3D;AACA,0BAAKM,MAAL,CAAYO,iBAAZ,GAAgC,MAAKP,MAAL,CAAYO,iBAAZ,IAAiClB,mBAAjE;AACA,0BAAKW,MAAL,CAAYQ,QAAZ,GAAuB,MAAKR,MAAL,CAAYQ,QAAZ,IAAwB,MAAKC,SAAL,CAAeD,QAA9D;AACA,0BAAKR,MAAL,CAAYU,cAAZ,GAA6B,MAAKV,MAAL,CAAYU,cAAZ,IAA8BhB,IAA3D;AACA,0BAAKM,MAAL,CAAYW,cAAZ,GAA6B,MAAKX,MAAL,CAAYW,cAAZ,IAA8B,CAA3D;;AAEA,0BAAKX,MAAL,CAAYY,MAAZ,GAAqB,MAAKZ,MAAL,CAAYY,MAAZ,IAAsB,CAAC,CAAC,MAAKd,YAAL,CAAkBe,aAAlB,EAAD,CAAD,CAA3C;AACA,yBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,MAAKd,MAAL,CAAYY,MAAZ,CAAmBG,MAAvC,EAA+CD,GAA/C,EAAoD;AAChD,6BAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAI,MAAKhB,MAAL,CAAYY,MAAZ,CAAmBE,CAAnB,EAAsBC,MAA1C,EAAkDC,GAAlD,EAAuD;AACnD,gCAAMC,OAAO,MAAKjB,MAAL,CAAYY,MAAZ,CAAmBE,CAAnB,EAAsBE,CAAtB,CAAb;AACA,gCAAIC,KAAKC,IAAL,KAAc,QAAlB,EAA4B;AACxB,oCAAMC,YAAY,MAAKrB,YAAL,CAAkBsB,UAAlB,CAA6BH,KAAKI,KAAlC,CAAlB;AACAF,0CAAUG,QAAV,GAAqBL,KAAKK,QAA1B;AACAH,0CAAUD,IAAV,GAAiBD,KAAKC,IAAtB;AACA,sCAAKlB,MAAL,CAAYY,MAAZ,CAAmBE,CAAnB,EAAsBE,CAAtB,IAA2BG,SAA3B;AACH;AACJ;AACJ;;AA3ByC;AA6B7C;;AAED;;;;;gDACYI,M,EAAQ;AAChB,4BAAMtB,QAAQ,KAAKH,YAAL,CAAkBsB,UAAlB,CAA6B,EAA7B,CAAd;AACAnB,8BAAMqB,QAAN,GAAiB,4BAAjB;AACArB,8BAAMiB,IAAN,GAAa,QAAb;AACA,4BAAMM,MAAM,KAAK1B,YAAL,CAAkBsB,UAAlB,CAA6B,EAA7B,CAAZ;AACAI,4BAAIC,IAAJ,GAAW,+BAAX;AACAD,4BAAIN,IAAJ,GAAW,QAAX;AACAM,4BAAIF,QAAJ,GAAe,YAAf;AACA,4BAAMI,SAAS,KAAK5B,YAAL,CAAkBe,aAAlB,EAAf;AACAa,+BAAOJ,QAAP,GAAkB,oBAAlB;;AAEA,6BAAKtB,MAAL,CAAYY,MAAZ,CAAmBW,MAAnB,IAA6B,CAACtB,KAAD,EAAQuB,GAAR,CAA7B;AACA,6BAAKxB,MAAL,CAAYY,MAAZ,CAAmBe,IAAnB,CAAwB,CAACD,MAAD,CAAxB;AACH;;;kDAGaE,O,EAASL,M,EAAQM,G,EAAK;AAChC;AACA,4BAAID,QAAQV,IAAR,KAAiB,aAArB,EAAoC;AAChC;AACA,gCAAIK,WAAW,CAAX,IAAgB,KAAKvB,MAAL,CAAYY,MAAZ,CAAmBW,SAAS,CAA5B,EAA+B,CAA/B,EAAkCF,KAAlC,KAA4C,EAAhE,EAAoE;AAChE,qCAAKS,WAAL,CAAiBP,MAAjB;AACH,6BAFD,MAEO;AAAG;AACN,qCAAKvB,MAAL,CAAYY,MAAZ,CAAmBW,MAAnB,EAA2BM,GAA3B,IAAkC,KAAK/B,YAAL,CAAkBe,aAAlB,EAAlC;AACH;AACJ,yBAPD,MAOO,IAAIe,QAAQV,IAAR,KAAiB,QAArB,EAA+B;AAAG;AACrC,iCAAKlB,MAAL,CAAYY,MAAZ,CAAmBmB,MAAnB,CAA0BR,MAA1B,EAAkC,CAAlC;AACA,iCAAKd,SAAL,CAAeuB,OAAf;AACH;AACD,+BAAO,IAAIC,OAAJ,CAAY,YAAM,CAAE,CAApB,CAAP;AACH;;;kDAEaL,O,EAASL,M,EAAQM,G,EAAK;AAChC,6BAAKpB,SAAL,CAAeuB,OAAf;AACH;;;kDAGaE,K,EAAOX,M,EAAQM,G,EAAK;AAC9B,4BAAIK,SAASA,MAAMlC,MAAnB,EAA2B;AACvB,iCAAKA,MAAL,CAAYY,MAAZ,CAAmBW,MAAnB,EAA2BM,GAA3B,EAAgCR,KAAhC,GAAwCa,MAAMlC,MAAN,CAAaqB,KAArD;AACA,iCAAKZ,SAAL,CAAeuB,OAAf;AACH;AACJ;;;+CAEUE,K,EAAO;AACd,6BAAKlC,MAAL,CAAYW,cAAZ,GAA6BuB,MAAMlC,MAAN,CAAaqB,KAA1C;AACA,6BAAKZ,SAAL,CAAeuB,OAAf;AACH;;;sDAGiB;AACd,+BAAO,IAAIC,OAAJ,CAAY,YAAM,CAAE,CAApB,CAAP;AACH;;;iDAEY;AACT,+BAAO,KAAKE,UAAL,CAAgBC,UAAhB,CAA2B,KAAKpC,MAAhC,EACFqC,IADE,CACG,KAAKvC,YAAL,CAAkBwC,mBAAlB,CAAsC,KAAtC,CADH,CAAP;AAEH;;;wDAEmB;AAChB,+BAAO,KAAKH,UAAL,CAAgBC,UAAhB,CAA2B,KAAKpC,MAAhC,EACFqC,IADE,CACG,UAACE,OAAD,EAAa;AACf,mCAAO,CAAC,EAAClB,OAAO3B,IAAR,EAAc8C,MAAM9C,IAApB,EAAD,EAA4B+C,MAA5B,CAAmCF,OAAnC,CAAP;AACH,yBAHE,EAIFF,IAJE,CAIG,KAAKvC,YAAL,CAAkBwC,mBAAlB,CAAsC,KAAtC,CAJH,CAAP;AAKH;;;wDAEmB;AAChB,+BAAO,KAAKH,UAAL,CAAgBO,kBAAhB,CAAmC,KAAK1C,MAAxC,EACFqC,IADE,CACG,UAACE,OAAD,EAAa;AACf,mCAAO,CAAC,EAAClB,OAAO3B,IAAR,EAAc8C,MAAM9C,IAApB,EAAD,EAA4B+C,MAA5B,CAAmCF,OAAnC,CAAP;AACH,yBAHE,EAIFF,IAJE,CAIG,KAAKvC,YAAL,CAAkBwC,mBAAlB,CAAsC,KAAtC,CAJH,CAAP;AAKH;;;kDAEa;AACV,+BAAO,KAAKH,UAAL,CAAgBQ,YAAhB,CAA6B,KAAK3C,MAAlC,EACFqC,IADE,CACG,UAACE,OAAD,EAAa;AACf,mCAAO,CAAC,EAACC,MAAM9C,IAAP,EAAa2B,OAAO3B,IAApB,EAAD,EAA4B+C,MAA5B,CAAmCF,OAAnC,CAAP;AACH,yBAHE,EAIFF,IAJE,CAIG,KAAKvC,YAAL,CAAkBwC,mBAAlB,CAAsC,KAAtC,CAJH,CAAP;AAKH;;;oDAEe;AACZM,gCAAQC,GAAR,CAAY,KAAK7C,MAAjB;AACA,+BAAO,KAAKmC,UAAL,CAAgBW,cAAhB,CAA+B,KAAK9C,MAApC,EACFqC,IADE,CACG,KAAKvC,YAAL,CAAkBwC,mBAAlB,CAAsC,KAAtC,CADH,CAAP;AAEH;;;iDAEY;AACT,+BAAO,KAAKH,UAAL,CAAgBY,WAAhB,CAA4B,KAAK/C,MAAjC,EACFqC,IADE,CACG,KAAKvC,YAAL,CAAkBwC,mBAAlB,CAAsC,KAAtC,CADH,CAAP;AAEH;;;mDAEc;AACX,4BAAMU,YAAY,CAACtD,IAAD,EAAO+C,MAAP,CAActD,aAAd,CAAlB;AACA,+BAAO,IAAI8C,OAAJ,CAAY,UAACgB,OAAD,EAAa;AAC5BA,oCAAQD,UAAUE,GAAV,CAAc,UAACC,CAAD,EAAO;AACzB,uCAAO,EAACX,MAAMW,CAAP,EAAU9B,OAAO8B,CAAjB,EAAP;AACH,6BAFO,CAAR;AAGH,yBAJM,EAIJd,IAJI,CAIC,KAAKvC,YAAL,CAAkBwC,mBAAlB,CAAsC,KAAtC,CAJD,CAAP;AAKH;;;uDAEkB;AACf,6BAAKtC,MAAL,CAAYoD,QAAZ,GAAuB,CAAC,KAAKpD,MAAL,CAAYoD,QAApC;AACH;;;uDAEkB;AACfR,gCAAQC,GAAR,CAAY,iBAAZ,EADe,CACgB;AAC/B,6BAAKpC,SAAL,CAAeuB,OAAf,GAFe,CAEW;AAC7B;;;;cAhJ0C9C,S;;;;AAmJ/CS,sCAA0B0D,WAA1B,GAAwC,4BAAxC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from \"app/plugins/sdk\";\nimport \"./css/query-editor.css!\";\nimport {\n    ALL_OPERATORS,\n    DEFAULT_DEVICE,\n    DEFAULT_GROUP_BY_OP,\n    DEFAULT_SELECT_FIELD,\n    DEFAULT_SELECT_NS,\n    DEFAULT_SELECT_PROJECT,\n    DEFAULT_WHERE,\n    NONE\n} from \"./constants\";\n\nexport class iobeamDatasourceQueryCtrl extends QueryCtrl {\n\n    constructor($scope, $injector, uiSegmentSrv)  {\n        super($scope, $injector);\n\n        this.scope = $scope;\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.target.field = this.target.field || DEFAULT_SELECT_FIELD;\n        this.target.project_title = this.target.project || DEFAULT_SELECT_PROJECT;\n        this.target.project = this.target.project;\n        this.target.namespace = this.target.namespace || DEFAULT_SELECT_NS;\n        this.target.device_id = this.target.device_id || DEFAULT_DEVICE;\n        this.target.group_by_field = this.target.group_by_field || NONE;\n        this.target.group_by_operator = this.target.group_by_operator || DEFAULT_GROUP_BY_OP;\n        this.target.interval = this.target.interval || this.panelCtrl.interval;\n        this.target.limit_by_field = this.target.limit_by_field || NONE;\n        this.target.limit_by_count = this.target.limit_by_count || 1;\n\n        this.target.wheres = this.target.wheres || [[this.uiSegmentSrv.newPlusButton()]];\n        for (let i = 0; i < this.target.wheres.length; i++) {\n            for (let j = 0; j < this.target.wheres[i].length; j++) {\n                const temp = this.target.wheres[i][j];\n                if (temp.type === \"clause\") {\n                    const newClause = this.uiSegmentSrv.newSegment(temp.value);\n                    newClause.cssClass = temp.cssClass;\n                    newClause.type = temp.type;\n                    this.target.wheres[i][j] = newClause;\n                }\n            }\n        }\n\n    }\n\n    /** Add a new where row to the UI, pushing down the plus button **/\n    addWhereRow(rowIdx) {\n        const field = this.uiSegmentSrv.newSegment(\"\");\n        field.cssClass = \"io-segment io-where-clause\";\n        field.type = \"clause\";\n        const del = this.uiSegmentSrv.newSegment(\"\");\n        del.html = \"<i class=\\\"fa fa-trash\\\"></i>\";\n        del.type = \"delete\";\n        del.cssClass = \"io-segment\";\n        const button = this.uiSegmentSrv.newPlusButton();\n        button.cssClass = \"io-segment-no-left\";\n\n        this.target.wheres[rowIdx] = [field, del];\n        this.target.wheres.push([button]);\n    }\n\n    // Only handles clicks for plus buttons and delete buttons\n    wheresClicked(segment, rowIdx, idx) {\n        // Handle plus button clicks\n        if (segment.type === \"plus-button\") {\n            // Only add a row if the previous one is non-empty clause\n            if (rowIdx === 0 || this.target.wheres[rowIdx - 1][0].value !== \"\") {\n                this.addWhereRow(rowIdx);\n            } else {  // Prevents user from 'editting' the button\n                this.target.wheres[rowIdx][idx] = this.uiSegmentSrv.newPlusButton();\n            }\n        } else if (segment.type === \"delete\") {  // Handle delete clicks\n            this.target.wheres.splice(rowIdx, 1);\n            this.panelCtrl.refresh();\n        }\n        return new Promise(() => {});\n    }\n\n    wheresUpdated(segment, rowIdx, idx) {\n        this.panelCtrl.refresh();\n    }\n\n    // Handles when a clause is actually entered\n    wheresEntered(event, rowIdx, idx) {\n        if (event && event.target) {\n            this.target.wheres[rowIdx][idx].value = event.target.value;\n            this.panelCtrl.refresh();\n        }\n    }\n\n    limitCount(event) {\n        this.target.limit_by_count = event.target.value;\n        this.panelCtrl.refresh();\n    }\n\n    // No options for clicking on interval, just a text field.\n    intervalClicked() {\n        return new Promise(() => {});\n    }\n\n    getOptions() {\n        return this.datasource.fieldQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getGroupByOptions() {\n        return this.datasource.fieldQuery(this.target)\n            .then((results) => {\n                return [{value: NONE, text: NONE}].concat(results);\n            })\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getLimitByOptions() {\n        return this.datasource.limitByFieldsQuery(this.target)\n            .then((results) => {\n                return [{value: NONE, text: NONE}].concat(results);\n            })\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getProjects() {\n        return this.datasource.projectQuery(this.target)\n            .then((results) => {\n                return [{text: NONE, value: NONE}].concat(results);\n            })\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getNamespaces() {\n        console.log(this.target);\n        return this.datasource.namespaceQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getDevices() {\n        return this.datasource.deviceQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getOperators() {\n        const operators = [NONE].concat(ALL_OPERATORS);\n        return new Promise((resolve) => {\n            resolve(operators.map((v) => {\n                return {text: v, value: v};\n            }));\n        }).then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    toggleEditorMode() {\n        this.target.rawQuery = !this.target.rawQuery;\n    }\n\n    onChangeInternal() {\n        console.log(\"INTERNAL CHANGE\");//REMOVE\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n}\n\niobeamDatasourceQueryCtrl.templateUrl = \"partials/query.editor.html\";\n"]}