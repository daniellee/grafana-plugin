{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","ALL_OPERATORS","DEFAULT_DEVICE","DEFAULT_GROUP_BY","DEFAULT_GROUP_BY_OP","DEFAULT_SELECT_FIELD","DEFAULT_SELECT_NS","DEFAULT_WHERE","GenericDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","namespace","device_id","group_by_field","group_by_operator","interval","panelCtrl","wheres","newPlusButton","i","length","j","temp","type","newClause","newSegment","value","cssClass","rowIdx","field","del","html","button","push","segment","idx","addWhereRow","splice","refresh","Promise","event","datasource","fieldQuery","then","transformToSegments","results","text","concat","namespaceQuery","deviceQuery","operators","resolve","map","v","rawQuery","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\nimport {\n    ALL_OPERATORS,\n    DEFAULT_DEVICE,\n    DEFAULT_GROUP_BY,\n    DEFAULT_GROUP_BY_OP,\n    DEFAULT_SELECT_FIELD,\n    DEFAULT_SELECT_NS,\n    DEFAULT_WHERE\n} from \"./constants\";\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n    constructor($scope, $injector, uiSegmentSrv)  {\n        super($scope, $injector);\n\n        this.scope = $scope;\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.target.target = this.target.target || DEFAULT_SELECT_FIELD;\n        this.target.namespace = this.target.namespace || DEFAULT_SELECT_NS;\n        this.target.device_id = this.target.device_id || DEFAULT_DEVICE;\n        this.target.group_by_field = this.target.group_by_field || DEFAULT_GROUP_BY;\n        this.target.group_by_operator = this.target.group_by_operator || DEFAULT_GROUP_BY_OP;\n        this.target.interval = this.target.interval || this.panelCtrl.interval;\n\n        this.target.wheres = this.target.wheres || [[this.uiSegmentSrv.newPlusButton()]];\n        for (let i = 0; i < this.target.wheres.length; i++) {\n            for (let j = 0; j < this.target.wheres[i].length; j++) {\n                const temp = this.target.wheres[i][j];\n                if (temp.type === \"clause\") {\n                    const newClause = this.uiSegmentSrv.newSegment(temp.value);\n                    newClause.cssClass = temp.cssClass;\n                    newClause.type = temp.type;\n                    this.target.wheres[i][j] = newClause;\n                }\n            }\n        }\n\n    }\n\n    /** Add a new where row to the UI, pushing down the plus button **/\n    addWhereRow(rowIdx) {\n        const field = this.uiSegmentSrv.newSegment(\"\");\n        field.cssClass = \"io-segment io-where-clause\";\n        field.type = \"clause\";\n        const del = this.uiSegmentSrv.newSegment(\"\");\n        del.html = \"<i class=\\\"fa fa-trash\\\"></i>\";\n        del.type = \"delete\";\n        del.cssClass = \"io-segment\";\n        const button = this.uiSegmentSrv.newPlusButton();\n        button.cssClass = \"io-segment-no-left\";\n\n        this.target.wheres[rowIdx] = [field, del];\n        this.target.wheres.push([button]);\n    }\n\n    // Only handles clicks for plus buttons and delete buttons\n    wheresClicked(segment, rowIdx, idx) {\n        // Handle plus button clicks\n        if (segment.type === \"plus-button\") {\n            // Only add a row if the previous one is non-empty clause\n            if (rowIdx === 0 || this.target.wheres[rowIdx - 1][0].value !== \"\") {\n                this.addWhereRow(rowIdx);\n            } else {  // Prevents user from 'editting' the button\n                this.target.wheres[rowIdx][idx] = this.uiSegmentSrv.newPlusButton();\n            }\n        } else if (segment.type === \"delete\") {  // Handle delete clicks\n            this.target.wheres.splice(rowIdx, 1);\n            this.panelCtrl.refresh();\n        }\n        return new Promise(() => {});\n    }\n\n    wheresUpdated(segment, rowIdx, idx) {\n        this.panelCtrl.refresh();\n    }\n\n    // Handles when a clause is actually entered\n    wheresEntered(event, rowIdx, idx) {\n        if (event && event.target) {\n            this.target.wheres[rowIdx][idx].value = event.target.value;\n            this.panelCtrl.refresh();\n        }\n    }\n\n    // No options for clicking on interval, just a text field.\n    intervalClicked() {\n        return new Promise(() => {});\n    }\n\n    getOptions() {\n        return this.datasource.fieldQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getGroupByOptions() {\n        return this.datasource.fieldQuery(this.target)\n            .then((results) => {\n                return [{value: DEFAULT_GROUP_BY, text: DEFAULT_GROUP_BY}].concat(results);\n            })\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getNamespaces() {\n        return this.datasource.namespaceQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getDevices() {\n        return this.datasource.deviceQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    getOperators() {\n        const operators = [\"mean\", \"max\", \"min\", \"sum\", \"count\"];\n        return new Promise((resolve) => {\n            resolve(ALL_OPERATORS.map((v) => {\n                return {text: v, value: v};\n            }));\n        }).then(this.uiSegmentSrv.transformToSegments(false));\n    }\n\n    toggleEditorMode() {\n        this.target.rawQuery = !this.target.rawQuery;\n    }\n\n    onChangeInternal() {\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}